apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "name" . }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      hostNetwork: true
      terminationGracePeriodSeconds: 10
{{- if .Values.tproxy.useRBAC }}
      serviceAccountName: {{ template "fullname" . }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}-podwatch
          image: {{ .Values.images.tproxy_registry }}/{{ .Values.images.tproxy_podwatch }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          args:
            - '-namespace'
            - '{{ .Release.Namespace }}'
            - '-hostPort'
            - '{{ .Values.tproxy.hostPort }}'
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
{{- if .Values.tproxy.addStandardModeProxy }}
        - name: {{ .Chart.Name }}-standard-mode
          image: {{ .Values.images.mitmproxy }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          tty: true
          securityContext:
            runAsUser: 100
          ports:
            - containerPort: 1080
              hostPort: 1080
              protocol: TCP
          command:
            - mitmdump
            - '-p'
            - '1080'
            - '--insecure'
            - '--stream'
            - '4096'
            - '-s'
            - /opt/mitmproxy-scripts/mitm-script.py
          volumeMounts:
            - name: mitmproxy-certs
              mountPath: /home/mitmproxy/.mitmproxy
            - name: app-data
              mountPath: /opt/mitmproxy-scripts/
          resources:
{{ toYaml .Values.tproxy.resources | indent 12 }}
{{- end }}
        - name: {{ .Chart.Name }}-tproxy-mode
          image: {{ .Values.images.mitmproxy }}
          tty: true
          securityContext:
            runAsUser: 100
          ports:
            - containerPort: {{ .Values.tproxy.hostPort }}
              hostPort: {{ .Values.tproxy.hostPort }}
              protocol: TCP
          command:
            - mitmdump
            - '-p'
            - '{{ .Values.tproxy.hostPort }}'
            - '-T'
            - '--host'
            - '--insecure'
            - '--stream'
            - '4096'
            - '-s'
            - /opt/mitmproxy-scripts/mitm-script.py
          volumeMounts:
            - name: mitmproxy-certs
              mountPath: /home/mitmproxy/.mitmproxy
            - name: app-data
              mountPath: /opt/mitmproxy-scripts/
          resources:
{{ toYaml .Values.tproxy.resources | indent 12 }}
      volumes:
        - name: mitmproxy-certs
          secret:
            secretName: {{ template "fullname" . }}-certs
        
        - name: app-data
          configMap:
            name: {{ template "fullname" . }}-config
            items:
              - key: mitm-script.py
                path: mitm-script.py
  
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
